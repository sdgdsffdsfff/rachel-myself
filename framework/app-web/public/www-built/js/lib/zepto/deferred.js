//     Zepto.js
//     (c) 2010-2014 Thomas Fuchs
//     Zepto.js may be freely distributed under the MIT license.
//
//     Some code (c) 2005, 2013 jQuery Foundation, Inc. and other contributors

(function(e){function n(t){var r=[["resolve","done",e.Callbacks({once:1,memory:1}),"resolved"],["reject","fail",e.Callbacks({once:1,memory:1}),"rejected"],["notify","progress",e.Callbacks({memory:1})]],i="pending",s={state:function(){return i},always:function(){return o.done(arguments).fail(arguments),this},then:function(){var t=arguments;return n(function(n){e.each(r,function(r,i){var u=e.isFunction(t[r])&&t[r];o[i[1]](function(){var t=u&&u.apply(this,arguments);if(t&&e.isFunction(t.promise))t.promise().done(n.resolve).fail(n.reject).progress(n.notify);else{var r=this===s?n.promise():this,o=u?[t]:arguments;n[i[0]+"With"](r,o)}})}),t=null}).promise()},promise:function(t){return t!=null?e.extend(t,s):s}},o={};return e.each(r,function(e,t){var n=t[2],u=t[3];s[t[1]]=n.add,u&&n.add(function(){i=u},r[e^1][2].disable,r[2][2].lock),o[t[0]]=function(){return o[t[0]+"With"](this===o?s:this,arguments),this},o[t[0]+"With"]=n.fireWith}),s.promise(o),t&&t.call(o,o),o}var t=Array.prototype.slice;e.when=function(r){var i=t.call(arguments),s=i.length,o=0,u=s!==1||r&&e.isFunction(r.promise)?s:0,a=u===1?r:n(),f,l,c,h=function(e,n,r){return function(i){n[e]=this,r[e]=arguments.length>1?t.call(arguments):i,r===f?a.notifyWith(n,r):--u||a.resolveWith(n,r)}};if(s>1){f=new Array(s),l=new Array(s),c=new Array(s);for(;o<s;++o)i[o]&&e.isFunction(i[o].promise)?i[o].promise().done(h(o,c,i)).fail(a.reject).progress(h(o,l,f)):--u}return u||a.resolveWith(c,i),a.promise()},e.Deferred=n})(Zepto);